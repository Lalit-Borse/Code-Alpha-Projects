import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Room {
    private int roomNumber;
    private String category;
    private boolean available;

    public Room(int roomNumber, String category, boolean available) {
        this.roomNumber = roomNumber;
        this.category = category;
        this.available = available;
    }

    public int getRoomNumber() {
        return roomNumber;
    }

    public String getCategory() {
        return category;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }
}

class Reservation {
    private int reservationId;
    private String guestName;
    private Room room;
    private String checkInDate;
    private String checkOutDate;
    private boolean paid;

    public Reservation(int reservationId, String guestName, Room room, String checkInDate, String checkOutDate) {
        this.reservationId = reservationId;
        this.guestName = guestName;
        this.room = room;
        this.checkInDate = checkInDate;
        this.checkOutDate = checkOutDate;
        this.paid = false;
    }

    public int getReservationId() {
        return reservationId;
    }

    public String getGuestName() {
        return guestName;
    }

    public Room getRoom() {
        return room;
    }

    public String getCheckInDate() {
        return checkInDate;
    }

    public String getCheckOutDate() {
        return checkOutDate;
    }

    public boolean isPaid() {
        return paid;
    }

    public void setPaid(boolean paid) {
        this.paid = paid;
    }
}

class HotelReservationSystem {
    private List<Room> rooms;
    private List<Reservation> reservations;
    private int nextReservationId;

    public HotelReservationSystem() {
        rooms = new ArrayList<>();
        reservations = new ArrayList<>();
        nextReservationId = 1;
    }

    public void addRoom(Room room) {
        rooms.add(room);
    }

    public void makeReservation(String guestName, Room room, String checkInDate, String checkOutDate) {
        Reservation reservation = new Reservation(nextReservationId++, guestName, room, checkInDate, checkOutDate);
        reservations.add(reservation);
        room.setAvailable(false);
        System.out.println("Reservation successfully made. Your reservation ID is: " + reservation.getReservationId());
    }

    public void viewBookingDetails(int reservationId) {
        for (Reservation reservation : reservations) {
            if (reservation.getReservationId() == reservationId) {
                System.out.println("Reservation ID: " + reservation.getReservationId());
                System.out.println("Guest Name: " + reservation.getGuestName());
                System.out.println("Room Number: " + reservation.getRoom().getRoomNumber());
                System.out.println("Check-in Date: " + reservation.getCheckInDate());
                System.out.println("Check-out Date: " + reservation.getCheckOutDate());
                return;
            }
        }
        System.out.println("Reservation not found with ID: " + reservationId);
    }

    public List<Room> searchAvailableRooms(String category) {
        List<Room> availableRooms = new ArrayList<>();
        for (Room room : rooms) {
            if (room.isAvailable() && room.getCategory().equalsIgnoreCase(category)) {
                availableRooms.add(room);
            }
        }
        return availableRooms;
    }

    // Simulate payment processing
    public void processPayment(int reservationId) {
        for (Reservation reservation : reservations) {
            if (reservation.getReservationId() == reservationId) {
                reservation.setPaid(true);
                System.out.println("Payment processed successfully for reservation ID: " + reservationId);
                return;
            }
        }
        System.out.println("Reservation not found with ID: " + reservationId);
    }
}
